# This workflow builds and publishes the NexyHub-branded n8n Docker image
# Triggers on push to the nexyhub-branding branch
# Publishes to GitHub Container Registry at ghcr.io/nexyhub/n8n

name: 'NexyHub: Build and Push Docker Image'

env:
  NODE_OPTIONS: '--max-old-space-size=7168'
  NODE_VERSION: '22.21.0'

on:
  push:
    branches:
      - nexyhub-branding
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.github/workflows/**'
      - '!.github/workflows/nexyhub-docker-build.yml'

  workflow_dispatch:
    inputs:
      push_enabled:
        description: 'Push image to registry'
        required: false
        type: boolean
        default: true

jobs:
  build-and-push-nexyhub:
    name: Build and Push NexyHub Docker Image (${{ matrix.platform }})
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            runner: ubuntu-latest
            docker_platform: linux/amd64
          - platform: arm64
            runner: ubuntu-latest
            docker_platform: linux/arm64
    outputs:
      primary_tag: ${{ steps.determine-tags.outputs.primary_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build n8n with NexyHub theme
        run: pnpm build:n8n

      - name: Determine Docker tags
        id: determine-tags
        run: |
          PLATFORM="${{ matrix.platform }}"
          SHORT_SHA=$(git rev-parse --short=7 HEAD)
          BRANCH_NAME="nexyhub-branding"
          
          # Base image name
          GHCR_BASE="ghcr.io/${{ github.repository_owner }}/n8n"
          
          # Primary tag with platform suffix
          PRIMARY_TAG="${GHCR_BASE}:${BRANCH_NAME}-${PLATFORM}"
          
          # Additional tags
          SHA_TAG="${GHCR_BASE}:${BRANCH_NAME}-${SHORT_SHA}-${PLATFORM}"
          LATEST_TAG="${GHCR_BASE}:nexyhub-latest-${PLATFORM}"
          
          # Combine all tags
          ALL_TAGS="${PRIMARY_TAG}"
          ALL_TAGS="${ALL_TAGS},${SHA_TAG}"
          ALL_TAGS="${ALL_TAGS},${LATEST_TAG}"
          
          echo "tags=${ALL_TAGS}" >> "$GITHUB_OUTPUT"
          echo "primary_tag=${GHCR_BASE}:${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
          
          echo "Generated tags:"
          echo "${ALL_TAGS}" | tr ',' '\n'

      - name: Login to GitHub Container Registry
        if: github.event_name != 'workflow_dispatch' || inputs.push_enabled
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/images/n8n/Dockerfile
          platforms: ${{ matrix.docker_platform }}
          push: ${{ github.event_name != 'workflow_dispatch' || inputs.push_enabled }}
          tags: ${{ steps.determine-tags.outputs.tags }}
          build-args: |
            NODE_VERSION=${{ env.NODE_VERSION }}
            N8N_VERSION=nexyhub-${{ github.sha }}
            N8N_RELEASE_TYPE=nexyhub
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Output image information
        run: |
          echo "### NexyHub Docker Image Built Successfully! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Platform:** ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.determine-tags.outputs.tags }}" | tr ',' '\n' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pull Command:**" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ steps.determine-tags.outputs.primary_tag }}-${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  create-multi-arch-manifest:
    name: Create Multi-Arch Manifest
    needs: build-and-push-nexyhub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.event_name != 'workflow_dispatch' || inputs.push_enabled
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifests
        run: |
          GHCR_BASE="ghcr.io/${{ github.repository_owner }}/n8n"
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          BRANCH_NAME="nexyhub-branding"
          
          # Create manifest for branch tag
          docker buildx imagetools create -t "${GHCR_BASE}:${BRANCH_NAME}" \
            "${GHCR_BASE}:${BRANCH_NAME}-amd64" \
            "${GHCR_BASE}:${BRANCH_NAME}-arm64"
          
          # Create manifest for SHA tag
          docker buildx imagetools create -t "${GHCR_BASE}:${BRANCH_NAME}-${SHORT_SHA}" \
            "${GHCR_BASE}:${BRANCH_NAME}-${SHORT_SHA}-amd64" \
            "${GHCR_BASE}:${BRANCH_NAME}-${SHORT_SHA}-arm64"
          
          # Create manifest for latest tag
          docker buildx imagetools create -t "${GHCR_BASE}:nexyhub-latest" \
            "${GHCR_BASE}:nexyhub-latest-amd64" \
            "${GHCR_BASE}:nexyhub-latest-arm64"
          
          echo "### Multi-Arch Manifests Created! ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Available Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`${GHCR_BASE}:${BRANCH_NAME}\` (multi-arch)" >> $GITHUB_STEP_SUMMARY
          echo "- \`${GHCR_BASE}:${BRANCH_NAME}-${SHORT_SHA}\` (multi-arch)" >> $GITHUB_STEP_SUMMARY
          echo "- \`${GHCR_BASE}:nexyhub-latest\` (multi-arch)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Quick Start:**" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "# Pull the latest NexyHub-branded n8n" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${GHCR_BASE}:nexyhub-latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Run it" >> $GITHUB_STEP_SUMMARY
          echo "docker run -it --rm \\" >> $GITHUB_STEP_SUMMARY
          echo "  -p 5678:5678 \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e N8N_ENCRYPTION_KEY=\"your-encryption-key\" \\" >> $GITHUB_STEP_SUMMARY
          echo "  ${GHCR_BASE}:nexyhub-latest" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**View Package:** [GitHub Packages](https://github.com/${{ github.repository_owner }}/n8n/packages)" >> $GITHUB_STEP_SUMMARY
